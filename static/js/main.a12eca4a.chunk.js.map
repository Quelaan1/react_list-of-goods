{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","alphabet","setState","ALPHABET","length","LENGTH","reverse","reset","goods","order","visibleGoods","sort","g1","g2","localeCompare","getReorderedGoods","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CAAEC,YAAY,EAAOC,SAAUL,EAASM,MADlD,EAGEC,SAAW,kBAAM,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAHtD,EAKEC,OAAS,kBAAM,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UALpD,EAOEC,QAAU,kBAAM,EAAKJ,UAAS,SAACL,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAPjE,EASES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAZzB,4CAgBE,WACE,IAAMQ,EA9CH,SAA2BA,EAAiBC,GACjD,IAAMC,EAAY,YAAOF,GAgBzB,OAdIC,EAAMV,WAAaL,EAASM,OAC1BS,EAAMV,WAAaL,EAASS,UAC9BO,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBJ,EAAMV,WAAaL,EAASW,QAC9BK,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGR,OAASS,EAAGT,WAKxBK,EAAMX,WACDY,EAAaJ,UAGfI,EAyBSK,CAAkBpB,EAAiBqB,KAAKnB,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpB,iBAAkBH,KAAKnB,MAAME,WAAaL,EAASS,SACnD,0BACEa,KAAKnB,MAAME,WAAaL,EAASS,WAErCiB,QAASJ,KAAKf,SAPhB,iCAYA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,CACpB,iBAAkBH,KAAKnB,MAAME,WAAaL,EAASW,OACnD,0BACEW,KAAKnB,MAAME,WAAaL,EAASW,SAErCe,QAASJ,KAAKZ,OAPhB,4BAYA,wBACEc,KAAK,SACLD,UAAWE,IAAW,CACpB,kBAA4C,IAA1BH,KAAKnB,MAAMC,WAC7B,2BAC0B,IAA1BkB,KAAKnB,MAAMC,aAEbsB,QAASJ,KAAKV,QAPhB,qBAYCU,KAAKnB,MAAME,WAAaL,EAASM,OACL,IAA1BgB,KAAKnB,MAAMC,WAEV,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKT,MAHhB,mBAOE,QAGR,qBAAKU,UAAU,oCAAf,SACE,qBAAKA,UAAU,oBAAf,SACGT,EAAMa,KAAI,SAACC,GACV,OACE,8BACE,qBACE,UAAQ,OAERL,UAAU,qCAHZ,SAKGK,GAHIA,mBA9EzB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a12eca4a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(goods: string[], order: ReorderOptions) {\n  const visibleGoods = [...goods];\n\n  if (order.sortType !== SortType.NONE) {\n    if (order.sortType === SortType.ALPHABET) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (order.sortType === SortType.LENGTH) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n  }\n\n  if (order.isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = { isReversed: false, sortType: SortType.NONE };\n\n  alphabet = () => this.setState({ sortType: SortType.ALPHABET });\n\n  length = () => this.setState({ sortType: SortType.LENGTH });\n\n  reverse = () => this.setState((state) => ({ isReversed: !state.isReversed }));\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-info': this.state.sortType === SortType.ALPHABET,\n              'button is-info is-light':\n                this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.alphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-info': this.state.sortType === SortType.LENGTH,\n              'button is-info is-light':\n                this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={this.length}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-info': this.state.isReversed === true,\n              'button is-info is-light':\n              this.state.isReversed === false,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType !== SortType.NONE\n          || this.state.isReversed !== false\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            ) : null}\n        </div>\n\n        <div className=\"is-flex is-justify-content-center\">\n          <div className=\"has-text-centered\">\n            {goods.map((good) => {\n              return (\n                <div>\n                  <div\n                    data-cy=\"Good\"\n                    key={good}\n                    className=\"box column is-info is-rounded mb-3\"\n                  >\n                    {good}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}